{"version":3,"sources":["connect.js"],"names":["CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","onclick","handleAuthClick","handleSignoutClick","error","appendPre","JSON","stringify","style","display","event","signIn","signOut","message","pre","textContent","createTextNode","appendChild"],"mappings":"AAAA;AACA,IAAIA,SAAS,6EAAb;AACA,IAAIC,OAAO,4CAAX,EAEA;;AACA,IAAIC,cAAc,GAAG,CAAC,4DAAD,CAArB,EAEA;AACA;;AACA,IAAIC,MAAM,GAAG,4CAAb;AAEA,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAtB;AACA,IAAIC,aAAa,GAAGF,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAApB;AAEA;AACA;AACA;AACA;;AACEE,IAAI,CAACC,IAAL,CAAU,cAAV,EAA0BC,UAA1B,GACF;;AAEA;AACA;AACA;AACA;;AACA,SAASA,UAAT,GAAsB;AACpBF,EAAAA,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiB;AACfC,IAAAA,MAAM,EAAEZ,OADO;AAEfa,IAAAA,QAAQ,EAAEd,SAFK;AAGfe,IAAAA,aAAa,EAAEb,cAHA;AAIfc,IAAAA,KAAK,EAAEb;AAJQ,GAAjB,EAKGc,IALH,CAKQ,YAAY;AAClB;AACAT,IAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BC,UAA7B,CAAwCC,MAAxC,CAA+CC,kBAA/C,EAFkB,CAIlB;;AACAA,IAAAA,kBAAkB,CAACd,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BC,UAA7B,CAAwCG,GAAxC,EAAD,CAAlB;AACAnB,IAAAA,eAAe,CAACoB,OAAhB,GAA0BC,eAA1B;AACAlB,IAAAA,aAAa,CAACiB,OAAd,GAAwBE,kBAAxB;AACD,GAbD,EAaG,UAASC,KAAT,EAAgB;AACjBC,IAAAA,SAAS,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAT;AACD,GAfD;AAgBD;AAED;AACA;AACA;AACA;;;AACA,SAASL,kBAAT,CAA4BF,UAA5B,EAAwC;AACtC,MAAIA,UAAJ,EAAgB;AACdhB,IAAAA,eAAe,CAAC2B,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACAzB,IAAAA,aAAa,CAACwB,KAAd,CAAoBC,OAApB,GAA8B,OAA9B;AACD,GAHD,MAGO;AACL5B,IAAAA,eAAe,CAAC2B,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;AACAzB,IAAAA,aAAa,CAACwB,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AACD;AACF;AAED;AACA;AACA;;;AACA,SAASP,eAAT,CAAyBQ,KAAzB,EAAgC;AAC9BzB,EAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6Be,MAA7B;AACD;AAED;AACA;AACA;;;AACA,SAASR,kBAAT,CAA4BO,KAA5B,EAAmC;AACjCzB,EAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BgB,OAA7B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,SAAT,CAAmBQ,OAAnB,EAA4B;AAC1B,MAAIC,GAAG,GAAGhC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACA,MAAIgC,WAAW,GAAGjC,QAAQ,CAACkC,cAAT,CAAwBH,OAAO,GAAG,IAAlC,CAAlB;AACAC,EAAAA,GAAG,CAACG,WAAJ,CAAgBF,WAAhB;AACD","file":"connect.769adc2f.js","sourceRoot":"..","sourcesContent":["// Client ID and API key from the Developer Console\nvar CLIENT_ID = process.env.CLIENT_ID;\nvar API_KEY = process.env.API_KEY;\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = 'https://www.googleapis.com/auth/drive.file';\n\nvar authorizeButton = document.getElementById('authorize_button');\nvar signoutButton = document.getElementById('signout_button');\n\n/**\n *  On load, called to load the auth2 library and API client library.\n */\n// function handleClientLoad() {\n  gapi.load('client:auth2', initClient);\n// }\n\n/**\n *  Initializes the API client library and sets up sign-in state\n *  listeners.\n */\nfunction initClient() {\n  gapi.client.init({\n    apiKey: API_KEY,\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  }).then(function () {\n    // Listen for sign-in state changes.\n    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    // Handle the initial sign-in state.\n    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    signoutButton.onclick = handleSignoutClick;\n  }, function(error) {\n    appendPre(JSON.stringify(error, null, 2));\n  });\n}\n\n/**\n *  Called when the signed in status changes, to update the UI\n *  appropriately. After a sign-in, the API is called.\n */\nfunction updateSigninStatus(isSignedIn) {\n  if (isSignedIn) {\n    authorizeButton.style.display = 'none';\n    signoutButton.style.display = 'block';\n  } else {\n    authorizeButton.style.display = 'block';\n    signoutButton.style.display = 'none';\n  }\n}\n\n/**\n *  Sign in the user upon button click.\n */\nfunction handleAuthClick(event) {\n  gapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick(event) {\n  gapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\n  var pre = document.getElementById('content');\n  var textContent = document.createTextNode(message + '\\n');\n  pre.appendChild(textContent);\n}\n\n"]}